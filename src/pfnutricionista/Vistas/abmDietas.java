/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pfnutricionista.Vistas;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import pfnutricionista.AccesoADatos.DietaData;
import pfnutricionista.AccesoADatos.PacienteData;
import pfnutricionista.entidades.Paciente;
import pfnutricionista.entidades.Dieta;
import pfnutricionista.AccesoADatos.DietaComidaData;
import pfnutricionista.AccesoADatos.HistorialData;
import pfnutricionista.entidades.Comida;
import pfnutricionista.entidades.Historial;

/**
 *
 * @author ivanm
 */
public class abmDietas extends javax.swing.JInternalFrame {

    /**
     * Creates new form abmPacientes
     */
    private DefaultTableModel modelo = new DefaultTableModel();
    private DefaultTableModel modelo1 = new DefaultTableModel();
    private DefaultTableModel modelo2 = new DefaultTableModel();
    private DefaultTableModel modelo3 = new DefaultTableModel();
    
    public abmDietas() {
        initComponents();
        numJTextDoub(jtPesoInicial, 6);
        numJTextDoub(jtPesoFinal, 6);
        numJTextDoub(jtPorcentaje,6);
        modelo = new DefaultTableModel();
        modelo1 = new DefaultTableModel();
        modelo2 = new DefaultTableModel();
        modelo3 = new DefaultTableModel();
        armarCabeceraTabla();
        armarCabeceraTablaPesos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel7 = new javax.swing.JLabel();
        jpPaciente = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jtPacDNI = new javax.swing.JTextField();
        Apellido1 = new javax.swing.JLabel();
        jbBucarPaciente = new javax.swing.JButton();
        jtPacApellido = new javax.swing.JTextField();
        jtPacNombre = new javax.swing.JTextField();
        Apellido = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jpDieta = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jbAlta = new javax.swing.JButton();
        jdchFechaInicial = new com.toedter.calendar.JDateChooser();
        jdchFechaFinal = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jbModificar = new javax.swing.JButton();
        jbBaja = new javax.swing.JButton();
        jtPesoInicial = new javax.swing.JTextField();
        jtPesoFinal = new javax.swing.JTextField();
        jpControlPeso = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtControlPeso = new javax.swing.JTable();
        jbGuardarCP = new javax.swing.JButton();
        jbEliminarCP = new javax.swing.JButton();
        jbAgregarFilaCP = new javax.swing.JButton();
        jpPlanComidas = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtComidasPlan = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jtCalorias = new javax.swing.JTextField();
        jbQuitarC = new javax.swing.JButton();
        jbAgregarC = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtComidasDisponibles = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jbPorcentaje = new javax.swing.JButton();
        jtPorcentaje = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtComidasPorecentaje = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ficha de Dietas");
        setToolTipText("");
        setDoubleBuffered(true);
        setMaximumSize(new java.awt.Dimension(1215, 926));
        setNormalBounds(new java.awt.Rectangle(0, 0, 1215, 926));
        setPreferredSize(new java.awt.Dimension(1215, 926));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("PLAN DE DIETA");

        jpPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 0), 3));
        jpPaciente.setName(""); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 153, 0));
        jLabel4.setText("PACIENTE:");

        jtPacDNI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtPacDNI.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtPacDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPacDNIActionPerformed(evt);
            }
        });
        jtPacDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtPacDNIKeyTyped(evt);
            }
        });

        Apellido1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Apellido1.setForeground(new java.awt.Color(51, 153, 0));
        Apellido1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Apellido1.setText("DNI");

        jbBucarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupa.jpeg"))); // NOI18N
        jbBucarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBucarPacienteActionPerformed(evt);
            }
        });

        jtPacApellido.setEditable(false);
        jtPacApellido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtPacApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPacApellidoActionPerformed(evt);
            }
        });
        jtPacApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtPacApellidoKeyTyped(evt);
            }
        });

        jtPacNombre.setEditable(false);
        jtPacNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtPacNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPacNombreActionPerformed(evt);
            }
        });
        jtPacNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtPacNombreKeyTyped(evt);
            }
        });

        Apellido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Apellido.setForeground(new java.awt.Color(51, 153, 0));
        Apellido.setText("Apellido");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 0));
        jLabel1.setText("Nombres");

        javax.swing.GroupLayout jpPacienteLayout = new javax.swing.GroupLayout(jpPaciente);
        jpPaciente.setLayout(jpPacienteLayout);
        jpPacienteLayout.setHorizontalGroup(
            jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPacienteLayout.createSequentialGroup()
                .addGroup(jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPacienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jpPacienteLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPacienteLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jtPacNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpPacienteLayout.createSequentialGroup()
                                    .addComponent(Apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jtPacDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(jbBucarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jpPacienteLayout.createSequentialGroup()
                                    .addComponent(Apellido)
                                    .addGap(18, 18, 18)
                                    .addComponent(jtPacApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpPacienteLayout.setVerticalGroup(
            jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPacienteLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPacienteLayout.createSequentialGroup()
                        .addGroup(jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Apellido1)
                            .addComponent(jtPacDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPacienteLayout.createSequentialGroup()
                        .addComponent(jbBucarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Apellido)
                    .addComponent(jtPacApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtPacNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18))
        );

        jbBucarPaciente.getAccessibleContext().setAccessibleDescription("Buscar paciente por DNI...");

        jpDieta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 0), 3));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 153, 0));
        jLabel11.setText("DIETA:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 0));
        jLabel2.setText("Nombre de la dieta");

        jtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNombreActionPerformed(evt);
            }
        });
        jtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtNombreKeyTyped(evt);
            }
        });

        jbAlta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbAlta.setForeground(new java.awt.Color(51, 153, 0));
        jbAlta.setText("Cargar Dieta");
        jbAlta.setToolTipText("Crear una dieta al paciente...");
        jbAlta.setEnabled(false);
        jbAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAltaActionPerformed(evt);
            }
        });

        jdchFechaInicial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jdchFechaFinal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 153, 0));
        jLabel5.setText("Fecha de Inicio");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 153, 0));
        jLabel6.setText("Fecha de Fin");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 153, 0));
        jLabel3.setText("Peso Inicial");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 153, 0));
        jLabel8.setText("Peso Final");

        jbModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbModificar.setForeground(new java.awt.Color(51, 153, 0));
        jbModificar.setText("Modificar Dieta");
        jbModificar.setToolTipText("Guardar modificaciones realizadas...");
        jbModificar.setActionCommand("jbModificar");
        jbModificar.setAutoscrolls(true);
        jbModificar.setEnabled(false);
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbBaja.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbBaja.setForeground(new java.awt.Color(51, 153, 0));
        jbBaja.setText("Eliminar Dieta");
        jbBaja.setToolTipText("Eliminar la dieta del paciente...");
        jbBaja.setEnabled(false);
        jbBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBajaActionPerformed(evt);
            }
        });

        jtPesoInicial.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtPesoInicial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jtPesoFinal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtPesoFinal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jpDietaLayout = new javax.swing.GroupLayout(jpDieta);
        jpDieta.setLayout(jpDietaLayout);
        jpDietaLayout.setHorizontalGroup(
            jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDietaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDietaLayout.createSequentialGroup()
                        .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpDietaLayout.createSequentialGroup()
                                .addGap(387, 387, 387)
                                .addComponent(jbBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpDietaLayout.createSequentialGroup()
                                .addComponent(jbAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpDietaLayout.createSequentialGroup()
                        .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpDietaLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpDietaLayout.createSequentialGroup()
                                        .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jpDietaLayout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(jdchFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jpDietaLayout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jdchFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jpDietaLayout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(jLabel3)
                                                .addGap(18, 18, 18)
                                                .addComponent(jtPesoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jpDietaLayout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addComponent(jLabel8)
                                                .addGap(18, 18, 18)
                                                .addComponent(jtPesoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jpDietaLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel11))
                        .addContainerGap(46, Short.MAX_VALUE))))
        );
        jpDietaLayout.setVerticalGroup(
            jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDietaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpDietaLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jdchFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtPesoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtPesoFinal)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDietaLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jdchFechaFinal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(jpDietaLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel5)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel6)))
                .addGap(32, 32, 32)
                .addGroup(jpDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jbAlta.getAccessibleContext().setAccessibleName("");

        jpControlPeso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 0), 3));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 153, 0));
        jLabel9.setText("CONTROL DE PESO:");

        jtControlPeso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtControlPeso.setGridColor(new java.awt.Color(51, 153, 0));
        jtControlPeso.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jtControlPesoComponentAdded(evt);
            }
        });
        jScrollPane4.setViewportView(jtControlPeso);

        jbGuardarCP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbGuardarCP.setForeground(new java.awt.Color(51, 153, 0));
        jbGuardarCP.setText("Guardar registro");
        jbGuardarCP.setToolTipText("Agregar registro al control de peso...");
        jbGuardarCP.setEnabled(false);
        jbGuardarCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarCPActionPerformed(evt);
            }
        });

        jbEliminarCP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbEliminarCP.setForeground(new java.awt.Color(51, 153, 0));
        jbEliminarCP.setText("Eliminar registro");
        jbEliminarCP.setToolTipText("Eliminar registro del control de peso...");
        jbEliminarCP.setEnabled(false);
        jbEliminarCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarCPActionPerformed(evt);
            }
        });

        jbAgregarFilaCP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbAgregarFilaCP.setForeground(new java.awt.Color(51, 153, 0));
        jbAgregarFilaCP.setText("Agregar registro");
        jbAgregarFilaCP.setToolTipText("Agregar fila a la tabla...");
        jbAgregarFilaCP.setEnabled(false);
        jbAgregarFilaCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarFilaCPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpControlPesoLayout = new javax.swing.GroupLayout(jpControlPeso);
        jpControlPeso.setLayout(jpControlPesoLayout);
        jpControlPesoLayout.setHorizontalGroup(
            jpControlPesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpControlPesoLayout.createSequentialGroup()
                .addGroup(jpControlPesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpControlPesoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(jpControlPesoLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jpControlPesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpControlPesoLayout.createSequentialGroup()
                                .addComponent(jbAgregarFilaCP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbGuardarCP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbEliminarCP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpControlPesoLayout.setVerticalGroup(
            jpControlPesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpControlPesoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpControlPesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAgregarFilaCP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbGuardarCP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEliminarCP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jpPlanComidas.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 0), 3, true));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 153, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("PLAN DE COMIDAS");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 153, 0));
        jLabel12.setText("Comidas del plan:");

        jtComidasPlan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtComidasPlan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtComidasPlan.setGridColor(new java.awt.Color(51, 153, 0));
        jtComidasPlan.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jtComidasPlanAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(jtComidasPlan);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 153, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Calorias maximas de las comidas a listar:");
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jtCalorias.setEditable(false);
        jtCalorias.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtCalorias.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtCalorias.setToolTipText("Ingrese el valor maximo de calorias a listar...");
        jtCalorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCaloriasActionPerformed(evt);
            }
        });
        jtCalorias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtCaloriasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtCaloriasKeyTyped(evt);
            }
        });

        jbQuitarC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbQuitarC.setForeground(new java.awt.Color(51, 153, 0));
        jbQuitarC.setText("Quitar Comida al plan");
        jbQuitarC.setToolTipText("Quitar comida seleccionada del plan...");
        jbQuitarC.setEnabled(false);
        jbQuitarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuitarCActionPerformed(evt);
            }
        });

        jbAgregarC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbAgregarC.setForeground(new java.awt.Color(51, 153, 0));
        jbAgregarC.setText("Agregar comida al plan");
        jbAgregarC.setToolTipText("Agregar comida seleccionada al plan...");
        jbAgregarC.setEnabled(false);
        jbAgregarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarCActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 153, 0));
        jLabel13.setText("Comidas para agregar:");

        jtComidasDisponibles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtComidasDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtComidasDisponibles.setGridColor(new java.awt.Color(51, 153, 0));
        jtComidasDisponibles.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jtComidasDisponiblesAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane3.setViewportView(jtComidasDisponibles);
        jtComidasDisponibles.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jpPlanComidasLayout = new javax.swing.GroupLayout(jpPlanComidas);
        jpPlanComidas.setLayout(jpPlanComidasLayout);
        jpPlanComidasLayout.setHorizontalGroup(
            jpPlanComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlanComidasLayout.createSequentialGroup()
                .addGroup(jpPlanComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpPlanComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpPlanComidasLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jpPlanComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel12)
                                .addGroup(jpPlanComidasLayout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addGap(26, 26, 26)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtCalorias, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jbAgregarC)
                                .addComponent(jbQuitarC)))
                        .addGroup(jpPlanComidasLayout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jpPlanComidasLayout.setVerticalGroup(
            jpPlanComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlanComidasLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jbQuitarC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpPlanComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jtCalorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAgregarC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 0), 3));
        jPanel1.setForeground(new java.awt.Color(51, 153, 0));

        jbPorcentaje.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbPorcentaje.setForeground(new java.awt.Color(51, 153, 0));
        jbPorcentaje.setText("Limite");
        jbPorcentaje.setToolTipText("Mostrar comidas...");
        jbPorcentaje.setActionCommand("");
        jbPorcentaje.setEnabled(false);
        jbPorcentaje.setSelected(true);
        jbPorcentaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPorcentajeActionPerformed(evt);
            }
        });

        jtPorcentaje.setEditable(false);
        jtPorcentaje.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtPorcentaje.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtPorcentaje.setToolTipText("Ingrese el valor maximo de calorias a listar...");
        jtPorcentaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPorcentajeActionPerformed(evt);
            }
        });
        jtPorcentaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtPorcentajeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtPorcentajeKeyTyped(evt);
            }
        });

        jtComidasPorecentaje.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtComidasPorecentaje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtComidasPorecentaje.setGridColor(new java.awt.Color(51, 153, 0));
        jtComidasPorecentaje.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jtComidasPorecentajeAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane5.setViewportView(jtComidasPorecentaje);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(48, 48, 48)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(81, 81, 81)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(82, Short.MAX_VALUE)))
        );

        jbPorcentaje.getAccessibleContext().setAccessibleName("Mostrar comidas...");
        jtPorcentaje.getAccessibleContext().setAccessibleDescription("Ingrese el porcentaje limite...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jpControlPeso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpPlanComidas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpDieta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jpPlanComidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jpControlPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    DecimalFormat formatoPDec = new DecimalFormat("###.##");

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        Dieta dieta = new Dieta();
        DietaData dietaData = new DietaData();
        if (jtNombre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Error. El campo Nombre no puede estar vacio.");
            jtNombre.requestFocus();
        } else {
            dieta.setNombre(jtNombre.getText());
            dieta.setFechaInicial(LocalDate.parse(jdchFechaInicial.getDateFormatString()));
            dieta.setFechaFinal(LocalDate.parse(jdchFechaFinal.getDateFormatString()));
            dieta.setPesoInicial(Double.valueOf(jtPesoInicial.getText()));
            dieta.setPesoFinal(Double.valueOf(jtPesoFinal.getText()));
            dietaData.modificarDieta(dieta);
            jtNombre.requestFocus();
        }
    }//GEN-LAST:event_jbModificarActionPerformed
//1132185230 ezequiel
    private void jbAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAltaActionPerformed
        Dieta dieta = new Dieta();
        DietaData dietaData = new DietaData();
        Paciente paciente;
        PacienteData pacienteData = new PacienteData();
        LocalDate fInicial, fFinal;
        double pInicial, pFinal;
        if (jtNombre.getText().equals("") || jtPacDNI.getText().equals("") || jdchFechaInicial.getDate() == null || jtPesoInicial.getText() == "") {
            JOptionPane.showMessageDialog(null, "Error. Los campos no pueden estar vacio.");
            jtPacDNI.requestFocus();
        } else {
            paciente = pacienteData.buscarPacienteXdni(Integer.parseInt(jtPacDNI.getText()));
            dieta.setNombre(jtNombre.getText());
            dieta.setPaciente(paciente);
            fInicial = (Date.valueOf(jdchFechaInicial.getDate().toInstant().atZone(ZoneId.systemDefault()).format(dtf))).toLocalDate();
            if (fInicial != null) {
                //fFinal = (Date.valueOf(jdchFechaFinal.getDate().toInstant().atZone(ZoneId.systemDefault()).format(dtf))).toLocalDate();
                dieta.setFechaInicial(fInicial);
            }
            pInicial = Double.parseDouble(jtPesoInicial.getText());
            if (pInicial != 0) {
               dieta.setPesoInicial(pInicial);
            }
            fFinal = (Date.valueOf(jdchFechaFinal.getDate().toInstant().atZone(ZoneId.systemDefault()).format(dtf))).toLocalDate();
            if (fFinal != null) {
                dieta.setFechaFinal(fFinal);
            }
            pFinal = Double.parseDouble(jtPesoFinal.getText());
            dieta.setPesoInicial(pInicial);
            if (pFinal != 0) {
                dieta.setPesoFinal(pFinal);
            }
            dietaData.guardarDieta(dieta);
            cargarTablasComidas(1, dieta);
            cargarTablasComidas(2, dieta);
            cargarTablaHistorial(dieta.getIdDieta());
            jbModificar.setEnabled(true);
            jbBaja.setEnabled(true);
            activarDesactivarBotonesComidas(true);
            activarDesactivarBotonesHistorial(true);
        }
    }//GEN-LAST:event_jbAltaActionPerformed

    private void jbBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBajaActionPerformed
        Dieta dieta;
        DietaData dietaData = new DietaData();
        HistorialData historialData = new HistorialData();
        if (jtPacDNI.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Error. Ingrese un dni.");
            jtPacDNI.requestFocus();
        } else {
            dieta = dietaData.buscarDietaXdni(Integer.parseInt(jtPacDNI.getText()));
            historialData.eliminarListaControlPeso(dieta.getIdDieta());
            dietaData.eliminarDieta(dieta.getIdDieta());
            vaciarCamposDieta();
            borrarTabla(1);
            borrarTabla(2);
            borrarTabla(3);
        }
    }//GEN-LAST:event_jbBajaActionPerformed


    private void jtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyTyped
        jtNombre.setText(jtNombre.getText().toUpperCase());
    }//GEN-LAST:event_jtNombreKeyTyped

    private void jtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNombreActionPerformed

    }//GEN-LAST:event_jtNombreActionPerformed

    private void jtPacApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPacApellidoActionPerformed

    }//GEN-LAST:event_jtPacApellidoActionPerformed

    private void jtPacNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPacNombreActionPerformed

    }//GEN-LAST:event_jtPacNombreActionPerformed

    private void jbBucarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBucarPacienteActionPerformed
    if (!jtPacDNI.getText().isEmpty()){
        Paciente paciente;
        PacienteData pacienteData = new PacienteData();
        paciente = pacienteData.buscarPacienteXdni(Integer.parseInt(jtPacDNI.getText()));
        if (paciente.getIdPaciente() > 0) {
            jtPacDNI.setText(Integer.toString(paciente.getDni()));
            jtPacApellido.setText(paciente.getApellido());
            jtPacNombre.setText(paciente.getNombre());
            DietaData dData = new DietaData();
            Dieta dieta = new Dieta();
            dieta = dData.buscarDietaXdni(paciente.getDni());
            if (dieta.getIdDieta() > 0){
                jtNombre.setText(dieta.getNombre());
                jdchFechaInicial.setDate(Date.valueOf(dieta.getFechaInicial().format(dtf)));
                if (dieta.getFechaFinal()!= null){
                    //jdchFechaFinal.setDate(Date.valueOf(dieta.getFechaFinal()));
                    jdchFechaFinal.setDate(Date.valueOf(dieta.getFechaFinal().format(dtf)));
                } else {
                    jdchFechaFinal.setDate(null);
                }
                jtPesoInicial.setText(Double.toString(dieta.getPesoInicial()));
                if (dieta.getPesoFinal()!= 0){
                    jtPesoFinal.setText(Double.toString(dieta.getPesoFinal()));
                } else {
                    jtPesoFinal.setText(" ");
                }
                cargarTablasComidas(1, dieta);
                cargarTablasComidas(2, dieta);
                cargarTablaHistorial(dieta.getIdDieta());
                jbModificar.setEnabled(true);
                jbBaja.setEnabled(true);
                activarDesactivarBotonesComidas(true);
                activarDesactivarBotonesHistorial(true);
                activarDesactivarBotonesLimite(true);
                
            }else{
                vaciarCamposDieta();
                vaciarCamposPaciente();
                borrarTabla(1);
                borrarTabla(2);
                borrarTabla(3);
            }
        }
    }else{
        JOptionPane.showMessageDialog(null, "Ingrese el numero de dni a buscar");
        jtPacDNI.setText(" ");
        jtPacDNI.requestFocus();
    }
    }//GEN-LAST:event_jbBucarPacienteActionPerformed

    private void jtPacApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPacApellidoKeyTyped
        jtPacApellido.setText(jtPacApellido.getText().toUpperCase());
    }//GEN-LAST:event_jtPacApellidoKeyTyped

    private void jtPacNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPacNombreKeyTyped
        jtPacNombre.setText(jtPacNombre.getText().toUpperCase());
    }//GEN-LAST:event_jtPacNombreKeyTyped

    private void jtPacDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPacDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPacDNIActionPerformed

    private void jtPacDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPacDNIKeyTyped
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            evt.consume();
        }
        if (jtPacDNI.getText().length() >= 8) {
            evt.consume();
        }
    }//GEN-LAST:event_jtPacDNIKeyTyped

    private void jtComidasPlanAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jtComidasPlanAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jtComidasPlanAncestorAdded

    private void jtComidasDisponiblesAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jtComidasDisponiblesAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jtComidasDisponiblesAncestorAdded

    private void jbQuitarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQuitarCActionPerformed
        DietaData dietaData = new DietaData();
        DietaComidaData dietaComidaData = new DietaComidaData();
        int idcomida = borrarFilaComidasPlan();
        Dieta dieta = dietaData.buscarDietaXdni(Integer.parseInt(jtPacDNI.getText()));
        int idDieta = dieta.getIdDieta();
        dietaComidaData.eliminarDietaComida(idcomida, idDieta);
        borrarTabla(1);
        cargarTablasComidas(1, dieta);
    }//GEN-LAST:event_jbQuitarCActionPerformed

    private void jbEliminarCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarCPActionPerformed
        eliminarReistroHistorial();
    }//GEN-LAST:event_jbEliminarCPActionPerformed

    private void jbGuardarCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarCPActionPerformed
        guardarHistorial();
    }//GEN-LAST:event_jbGuardarCPActionPerformed

    private void jtControlPesoComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jtControlPesoComponentAdded
        
    }//GEN-LAST:event_jtControlPesoComponentAdded

    private void jbAgregarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarCActionPerformed
        DietaComidaData dietaComidaData = new DietaComidaData();
        DietaData dietaData = new DietaData();
        int indice = jtComidasDisponibles.getSelectedRow();
        int idComida= (Integer) jtComidasDisponibles.getValueAt(indice,0);
        modelo1.removeRow(indice);
        Dieta dieta = dietaData.buscarDietaXdni(Integer.parseInt(jtPacDNI.getText()));
        int idDieta = dieta.getIdDieta();
        dietaComidaData.guardarDietaComida(idComida, idDieta);
        borrarTabla(1);
        cargarTablasComidas(1, dieta);
    }//GEN-LAST:event_jbAgregarCActionPerformed

    private void jbAgregarFilaCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarFilaCPActionPerformed
        modelo2.addRow(new Object[] {"","",""});
        jbGuardarCP.setEnabled(true);
    }//GEN-LAST:event_jbAgregarFilaCPActionPerformed

    private void jtCaloriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCaloriasActionPerformed
        
    }//GEN-LAST:event_jtCaloriasActionPerformed

    private void jtCaloriasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCaloriasKeyTyped
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            evt.consume();
        }
        if (jtCalorias.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_jtCaloriasKeyTyped

    private void jtCaloriasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCaloriasKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            int calorias = Integer.parseInt(jtCalorias.getText());
            DietaData dietaData = new DietaData();
            borrarTabla(2);
            Dieta dieta = new Dieta();
            dieta = dietaData.buscarDietaXdni(Integer.parseInt(jtPacDNI.getText()));
            cargarTablaComidasxCalorias(calorias, dieta);
        }
            }//GEN-LAST:event_jtCaloriasKeyReleased

    private void jbPorcentajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPorcentajeActionPerformed
        double porcentaje = Double.parseDouble(jtPorcentaje.getText());
        if (porcentaje != 0) {
            DietaData dietaData = new DietaData();
            borrarTabla(4);
            Dieta dieta = new Dieta();
            dieta = dietaData.buscarDietaXdni(Integer.parseInt(jtPacDNI.getText()));
            cargarTablaComidasxPorcentaje(porcentaje, dieta);
        }
                
    }//GEN-LAST:event_jbPorcentajeActionPerformed

    private void jtPorcentajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPorcentajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPorcentajeActionPerformed

    private void jtPorcentajeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPorcentajeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPorcentajeKeyReleased

    private void jtPorcentajeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPorcentajeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPorcentajeKeyTyped

    private void jtComidasPorecentajeAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jtComidasPorecentajeAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jtComidasPorecentajeAncestorAdded

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Apellido;
    private javax.swing.JLabel Apellido1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAgregarC;
    private javax.swing.JButton jbAgregarFilaCP;
    private javax.swing.JButton jbAlta;
    private javax.swing.JButton jbBaja;
    private javax.swing.JButton jbBucarPaciente;
    private javax.swing.JButton jbEliminarCP;
    private javax.swing.JButton jbGuardarCP;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbPorcentaje;
    private javax.swing.JButton jbQuitarC;
    private com.toedter.calendar.JDateChooser jdchFechaFinal;
    private com.toedter.calendar.JDateChooser jdchFechaInicial;
    private javax.swing.JPanel jpControlPeso;
    private javax.swing.JPanel jpDieta;
    private javax.swing.JPanel jpPaciente;
    private javax.swing.JPanel jpPlanComidas;
    private javax.swing.JTextField jtCalorias;
    private javax.swing.JTable jtComidasDisponibles;
    private javax.swing.JTable jtComidasPlan;
    private javax.swing.JTable jtComidasPorecentaje;
    private javax.swing.JTable jtControlPeso;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtPacApellido;
    private javax.swing.JTextField jtPacDNI;
    private javax.swing.JTextField jtPacNombre;
    private javax.swing.JTextField jtPesoFinal;
    private javax.swing.JTextField jtPesoInicial;
    private javax.swing.JTextField jtPorcentaje;
    // End of variables declaration//GEN-END:variables

    private void vaciarCamposPaciente(){
        jtPacDNI.setText(" ");
        jtPacNombre.setText(" ");
        jtPacApellido.setText(" ");
        jtPacDNI.requestFocus();
    }

    private void vaciarCamposDieta(){
        jtNombre.setText(" ");
        jdchFechaInicial.setDate(null);
        jdchFechaFinal.setDate(null);
        jtPesoInicial.setText(" ");
        jtPesoFinal.setText(" ");
        jtNombre.requestFocus();
    }
    
    private void activarDesactivarBotonesLimite(boolean logico){
        jtPorcentaje.setEditable(logico);
        jbPorcentaje.setEnabled(logico);
    }
    
    private void activarDesactivarBotonesComidas(boolean logico){
        jtCalorias.setEditable(logico);
        jbQuitarC.setEnabled(logico);
        jbAgregarC.setEnabled(logico);
    }
     
    private void activarDesactivarBotonesHistorial(boolean logico){
        jbAgregarFilaCP.setEnabled(logico);
        jbGuardarCP.setEnabled(logico);
        jbEliminarCP.setEnabled(logico);       
    }
    
    
    
    private void armarCabeceraTabla(){
        ArrayList<Object> filaCabecera = new ArrayList();
        filaCabecera.add("Id Comida");
        filaCabecera.add("Nombre");
        filaCabecera.add("Detalle");
        filaCabecera.add("Horario");
        filaCabecera.add("CantCalorias");
        for (Object it: filaCabecera){
            modelo.addColumn(it);
            modelo1.addColumn(it);
        }
        jtComidasPlan.setModel(modelo);
        jtComidasDisponibles.setModel(modelo1);
        jtComidasPorecentaje.setModel(modelo3);
    }

    private void armarCabeceraTablaPesos(){
         ArrayList<Object> filaCabecera = new ArrayList();
            filaCabecera.add("Id Control");
            filaCabecera.add("Fecha");
            filaCabecera.add("Peso");
            for (Object it: filaCabecera){
            modelo2.addColumn(it);
        }
        jtControlPeso.setModel(modelo2);
    }

    private void borrarTabla(int tabla){
        int indice;
        if (tabla == 1){
            indice = jtComidasPlan.getRowCount()-1;  
            for(int i=indice;i>=0;i--){ 
                modelo.removeRow(i);
            }
        }
        if (tabla == 2) {
            indice = jtComidasDisponibles.getRowCount()-1;  
            for(int i=indice;i>=0;i--){ 
                modelo1.removeRow(i);
            }   
        }
            
        
        if (tabla == 3) {
            indice = jtControlPeso.getRowCount()-1;  
            for(int i=indice;i>=0;i--){ 
                modelo2.removeRow(i);
            }  
        }
        if (tabla == 4) {
            indice = jtComidasPorecentaje.getRowCount()-1;  
            for(int i=indice;i>=0;i--){ 
                modelo3.removeRow(i);
            }   
        }
    }
        

    private int borrarFilaComidasPlan(){
        int idComida;
        idComida=0;
        int indice = jtComidasPlan.getSelectedRow();
        if (indice != -1){
            idComida= (Integer)jtComidasPlan.getValueAt(indice,0);
            modelo.removeRow(indice);
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione la comida a quitar.");
        }
        return idComida;
    }

    private void cargarTablasComidas(int i, Dieta dieta){
        DietaComidaData dcData = new DietaComidaData();
        if (i==1){
            ArrayList<Comida> listaA = (ArrayList) dcData.listarDietaComida(dieta);
            for (Comida comida: listaA){
                modelo.addRow(new Object[] {comida.getIdComida(), comida.getNombre(), comida.getDetalle(), 
                    comida.getHorario(), comida.getCantCalorias()});
            }
        }
        if (i==2){
            ArrayList<Comida> listaA = (ArrayList) dcData.listarComida(dieta);
            for (Comida comida: listaA){
                modelo1.addRow(new Object[] {comida.getIdComida(), comida.getNombre(), comida.getDetalle(), 
                    comida.getHorario(), comida.getCantCalorias()});
            }
        }
    }
    
    private void cargarTablaComidasxCalorias(int calorias, Dieta dieta){
        DietaComidaData dcData = new DietaComidaData();
        ArrayList<Comida> listaC = (ArrayList) dcData.listarComidaXcalorias(dieta, calorias);
            for (Comida comida: listaC){
                modelo1.addRow(new Object[] {comida.getIdComida(), comida.getNombre(), comida.getDetalle(), 
                    comida.getHorario(), comida.getCantCalorias()});
            }
    }
    
    private void cargarTablaComidasxPorcentaje(double porcentaje, Dieta dieta){
        DietaComidaData dcData = new DietaComidaData();
        ArrayList<Comida> listaC = (ArrayList) dcData.listarComidaXPorciones(dieta, porcentaje);
            for (Comida comida: listaC){
                modelo3.addRow(new Object[] {comida.getIdComida(), comida.getNombre(), comida.getDetalle(), 
                    comida.getHorario(), comida.getCantCalorias()});
            }
    }
    

    private void cargarTablaHistorial(int idDieta){
        DietaData dietaData = new DietaData();
        HistorialData historialData = new HistorialData();
        ArrayList<Historial> listaCPeso = (ArrayList) historialData.listarHistorial(idDieta) ;
        for (Historial historial: listaCPeso) {
            modelo2.addRow(new Object[] {historial.getIdHistorial(),Date.valueOf(historial.getFechaRegistro()).toLocalDate(), historial.getPeso()});
        }
    }

    private void eliminarReistroHistorial(){
    HistorialData registroData = new HistorialData();
        int indice = jtControlPeso.getSelectedRow();
        if (indice != -1){
            int idHistorial;
            idHistorial = (Integer)jtControlPeso.getValueAt(indice,0);
            modelo2.removeRow(indice);
            registroData.eliminarRegistroControlPeso(idHistorial);
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione el registro a eliminar");
        }
    }
    
    private void guardarHistorial(){
    PacienteData pacientedata = new PacienteData();
        HistorialData registroData = new HistorialData();
        Paciente paciente;
        paciente = pacientedata.buscarPacienteXdni(Integer.parseInt(jtPacDNI.getText()));
        int idPaciente = (Integer) (paciente.getIdPaciente());
        int indice = jtControlPeso.getSelectedRow();
        if ( indice != -1){
            LocalDate fechaRegistro = (LocalDate) jtControlPeso.getValueAt(indice,1);
            int peso = (Integer)jtControlPeso.getValueAt(indice,2);
            registroData.guardarControlPeso(idPaciente, peso, fechaRegistro);
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione el registro cargado");
        }
    }
    
    private void guardarDietaComida (){
    DietaComidaData dietaComidaData = new DietaComidaData();
        DietaData dietaData = new DietaData();
        Dieta dieta;
        int idComida = borrarFilaComidasPlan();
        if (idComida!=0){
            dieta = dietaData.buscarDietaXdni(Integer.parseInt(jtPacDNI.getText()));
            int idDieta = dieta.getIdDieta();
            dietaComidaData.eliminarDietaComida(idComida, idDieta);    
        }
    }
    
    public void numJTextDoub (JTextField a, int limite) {
        a.addKeyListener(new KeyAdapter(){
        public void keyTyped (KeyEvent e){
                if (a.getText().length()== limite){

                    e.consume(); 
                }
                char c = e.getKeyChar();
                if (!Character.isDigit(c) && c != '.'){
                    e.consume();
                }
                if (c == '.' && a.getText().contains(".")){
                        e.consume();
                }
            }
        });
    }
}


